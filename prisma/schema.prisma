generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OrgService {
  id                 String           @id
  orgServiceUpviseId String           @unique
  OrgServiceUpvise   OrgServiceUpvise @relation(fields: [orgServiceUpviseId], references: [id])
  Organisation       Organisation?
}

model OrgServiceUpvise {
  id              String        @id
  enabled         Boolean       @default(false)
  email           String
  password        String
  url             String
  adminEyesOnly   Boolean
  userCap         Int
  upviseAccountId String        @unique
  UpviseAccount   UpviseAccount @relation(fields: [upviseAccountId], references: [id])
  OrgService      OrgService?
}

model Organisation {
  id                 String               @id
  partnerCode        String
  dateCreated        String
  name               String
  phone              String
  website            String
  address            String
  supportPlans       String
  logo               String
  userCap            Int
  orgServiceId       String               @unique
  OrgService         OrgService           @relation(fields: [orgServiceId], references: [id])
  OrganisationMember OrganisationMember[]
}

model OrganisationMember {
  id           String       @id
  isActive     Boolean      @default(false)
  isOrgManager Boolean      @default(false)
  dateCreated  String
  userId       String       @unique
  orgId        String
  Organisation Organisation @relation(fields: [orgId], references: [id])
  User         User         @relation(fields: [userId], references: [id])
}

model UpviseAccount {
  id               String            @id
  companyId        String
  companyName      String
  countryCode      String
  creationDate     String
  dbName           String
  displayName      String
  email            String
  emailDropbox     String
  expiryDate       String
  language         String
  partnerCode      String
  privilege        String
  shareToken       String
  token            String
  backupToken      String
  OrgServiceUpvise OrgServiceUpvise?
}

model User {
  id                   String              @id
  name                 String
  email                String
  password             String
  phoneNumber          String
  jobTitle             String
  role                 String
  resetPasswordtoken   String
  emailVerified        Boolean             @default(false)
  dateCreated          String
  lastActive           String
  resetPasswordExpires String
  OrganisationMember   OrganisationMember?
}
